name: On Push (main)

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js using .nvmrc
        run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          nvm install
          node -v
          npm -v

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Configure Git
        run: |
          git config --global user.email "${{ github.event.head_commit.committer.email }}"
          git config --global user.name "${{ github.event.head_commit.committer.name }}"

      - name: Lint
        run: |
          npm run lint

      - name: Test
        run: |
          npm run test

      - name: Authenticate with NPM
        run: npm config set //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}

      - name: Bump version and Publish to NPM
        if: github.ref == 'refs/heads/main'
        id: bump_version
        run: |
          git reset --hard # Reset any changes to repo, to allow the patch version to be bumped
          npm version patch
          npm publish
          git push --follow-tags
          echo "NEW_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: github.ref == 'refs/heads/main'
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ env.NEW_VERSION }}
          name: Release ${{ env.NEW_VERSION }}
          generateReleaseNotes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NEW_VERSION: ${{ env.NEW_VERSION }}
